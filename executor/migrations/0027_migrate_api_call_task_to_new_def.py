# Generated by Django 4.1.13 on 2024-05-29 09:23
import json
from hashlib import md5

from django.db import migrations


def transform_playbook_api_task(apps, schema_editor):
    PlayBookTask = apps.get_model("executor", "PlayBookTask")

    for db_task in PlayBookTask.objects.all():
        try:
            task = db_task.task
            task_source = task.get('source', '')
            if task_source.lower() != 'api':
                continue
            api_task = task.get('api')
            api_task_type = api_task.get('type', '')
            http_request = api_task.pop('http_request', {})
            if 'headers' in http_request and http_request['headers'] is not None:
                http_request['headers'] = json.dumps(http_request['headers'])
            if 'payload' in http_request and http_request['payload'] is not None:
                http_request['payload'] = json.dumps(http_request['payload'])
            if 'cookies' in http_request and http_request['cookies'] is not None:
                http_request['cookies'] = json.dumps(http_request['cookies'])

            new_task_def = {
                'api': {
                    'type': api_task_type,
                    'http_request': http_request,
                },
                'source': 'API'
            }
            task_md5 = md5(str(new_task_def).encode('utf-8')).hexdigest()
            db_task.task = new_task_def
            db_task.task_md5 = task_md5
            db_task.save()
        except Exception as e:
            print('skip task transformation for task id: ', db_task.id)
            print(f"Error transforming task {db_task.id}: {e}")
            continue


class Migration(migrations.Migration):
    dependencies = [
        ('executor', '0026_updated_migrations_for_old_playbook_executions'),
    ]

    operations = [
        migrations.RunPython(transform_playbook_api_task, migrations.RunPython.noop)
    ]
