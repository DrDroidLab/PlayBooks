"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _WorkflowTriggerType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _WorkflowTriggerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WorkflowTriggerType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_WTT: _WorkflowTriggerType.ValueType  # 0
    API: _WorkflowTriggerType.ValueType  # 1
    SLACK_ALERT: _WorkflowTriggerType.ValueType  # 2

class WorkflowTriggerType(_WorkflowTriggerType, metaclass=_WorkflowTriggerTypeEnumTypeWrapper): ...

UNKNOWN_WTT: WorkflowTriggerType.ValueType  # 0
API: WorkflowTriggerType.ValueType  # 1
SLACK_ALERT: WorkflowTriggerType.ValueType  # 2
global___WorkflowTriggerType = WorkflowTriggerType

class _WorkflowScheduleType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _WorkflowScheduleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WorkflowScheduleType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_WST: _WorkflowScheduleType.ValueType  # 0
    ONCE: _WorkflowScheduleType.ValueType  # 1
    SCHEDULED: _WorkflowScheduleType.ValueType  # 2

class WorkflowScheduleType(_WorkflowScheduleType, metaclass=_WorkflowScheduleTypeEnumTypeWrapper): ...

UNKNOWN_WST: WorkflowScheduleType.ValueType  # 0
ONCE: WorkflowScheduleType.ValueType  # 1
SCHEDULED: WorkflowScheduleType.ValueType  # 2
global___WorkflowScheduleType = WorkflowScheduleType

class _WorkflowNotificationType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _WorkflowNotificationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WorkflowNotificationType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_WTNT: _WorkflowNotificationType.ValueType  # 0
    SLACK_MESSAGE: _WorkflowNotificationType.ValueType  # 1
    SLACK_REPLY: _WorkflowNotificationType.ValueType  # 2
    WEBHOOK: _WorkflowNotificationType.ValueType  # 3

class WorkflowNotificationType(_WorkflowNotificationType, metaclass=_WorkflowNotificationTypeEnumTypeWrapper): ...

UNKNOWN_WTNT: WorkflowNotificationType.ValueType  # 0
SLACK_MESSAGE: WorkflowNotificationType.ValueType  # 1
SLACK_REPLY: WorkflowNotificationType.ValueType  # 2
WEBHOOK: WorkflowNotificationType.ValueType  # 3
global___WorkflowNotificationType = WorkflowNotificationType

@typing_extensions.final
class SlackAlertTrigger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHANNEL_FIELD_NUMBER: builtins.int
    ALERT_TYPE_FIELD_NUMBER: builtins.int
    MATCHING_STRING_FIELD_NUMBER: builtins.int
    channel: builtins.str
    alert_type: builtins.str
    matching_string: builtins.str
    def __init__(
        self,
        *,
        channel: builtins.str = ...,
        alert_type: builtins.str = ...,
        matching_string: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alert_type", b"alert_type", "channel", b"channel", "matching_string", b"matching_string"]) -> None: ...

global___SlackAlertTrigger = SlackAlertTrigger

@typing_extensions.final
class WorkflowTrigger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    WORKFLOW_TRIGGER_API_ENDPOINT_FIELD_NUMBER: builtins.int
    SLACK_ALERT_TRIGGER_FIELD_NUMBER: builtins.int
    type: global___WorkflowTriggerType.ValueType
    workflow_trigger_api_endpoint: builtins.str
    @property
    def slack_alert_trigger(self) -> global___SlackAlertTrigger: ...
    def __init__(
        self,
        *,
        type: global___WorkflowTriggerType.ValueType = ...,
        workflow_trigger_api_endpoint: builtins.str = ...,
        slack_alert_trigger: global___SlackAlertTrigger | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["slack_alert_trigger", b"slack_alert_trigger"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["slack_alert_trigger", b"slack_alert_trigger", "type", b"type", "workflow_trigger_api_endpoint", b"workflow_trigger_api_endpoint"]) -> None: ...

global___WorkflowTrigger = WorkflowTrigger

@typing_extensions.final
class WorkflowSchedule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    SCHEDULE_CRON_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    type: global___WorkflowScheduleType.ValueType
    schedule_cron: builtins.str
    @property
    def duration(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
    def __init__(
        self,
        *,
        type: global___WorkflowScheduleType.ValueType = ...,
        schedule_cron: builtins.str = ...,
        duration: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["duration", b"duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration", b"duration", "schedule_cron", b"schedule_cron", "type", b"type"]) -> None: ...

global___WorkflowSchedule = WorkflowSchedule

@typing_extensions.final
class WorkflowNotification(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SLACK_MESSAGE_CHANNEL_FIELD_NUMBER: builtins.int
    WEBHOOK_URL_FIELD_NUMBER: builtins.int
    slack_message_channel: builtins.str
    webhook_url: builtins.str
    def __init__(
        self,
        *,
        slack_message_channel: builtins.str = ...,
        webhook_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["slack_message_channel", b"slack_message_channel", "webhook_url", b"webhook_url"]) -> None: ...

global___WorkflowNotification = WorkflowNotification

@typing_extensions.final
class Workflow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PLAYBOOK_ID_FIELD_NUMBER: builtins.int
    TRIGGERS_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    NOTIFICATION_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def playbook_id(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
    @property
    def Triggers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WorkflowTrigger]: ...
    @property
    def schedule(self) -> global___WorkflowSchedule: ...
    @property
    def notification(self) -> global___WorkflowNotification: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        playbook_id: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
        Triggers: collections.abc.Iterable[global___WorkflowTrigger] | None = ...,
        schedule: global___WorkflowSchedule | None = ...,
        notification: global___WorkflowNotification | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["notification", b"notification", "playbook_id", b"playbook_id", "schedule", b"schedule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Triggers", b"Triggers", "name", b"name", "notification", b"notification", "playbook_id", b"playbook_id", "schedule", b"schedule"]) -> None: ...

global___Workflow = Workflow
