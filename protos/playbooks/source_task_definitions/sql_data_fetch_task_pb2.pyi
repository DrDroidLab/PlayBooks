"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SqlDataFetch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TaskType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SqlDataFetch._TaskType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: SqlDataFetch._TaskType.ValueType  # 0
        SQL_QUERY: SqlDataFetch._TaskType.ValueType  # 1

    class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper): ...
    UNKNOWN: SqlDataFetch.TaskType.ValueType  # 0
    SQL_QUERY: SqlDataFetch.TaskType.ValueType  # 1

    @typing_extensions.final
    class SqlQuery(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DATABASE_FIELD_NUMBER: builtins.int
        QUERY_FIELD_NUMBER: builtins.int
        ORDER_BY_COLUMN_FIELD_NUMBER: builtins.int
        LIMIT_FIELD_NUMBER: builtins.int
        OFFSET_FIELD_NUMBER: builtins.int
        TIMEOUT_FIELD_NUMBER: builtins.int
        @property
        def database(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def query(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def order_by_column(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def limit(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
        @property
        def offset(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
        @property
        def timeout(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
        def __init__(
            self,
            *,
            database: google.protobuf.wrappers_pb2.StringValue | None = ...,
            query: google.protobuf.wrappers_pb2.StringValue | None = ...,
            order_by_column: google.protobuf.wrappers_pb2.StringValue | None = ...,
            limit: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
            offset: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
            timeout: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["database", b"database", "limit", b"limit", "offset", b"offset", "order_by_column", b"order_by_column", "query", b"query", "timeout", b"timeout"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["database", b"database", "limit", b"limit", "offset", b"offset", "order_by_column", b"order_by_column", "query", b"query", "timeout", b"timeout"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    SQL_QUERY_FIELD_NUMBER: builtins.int
    type: global___SqlDataFetch.TaskType.ValueType
    @property
    def sql_query(self) -> global___SqlDataFetch.SqlQuery: ...
    def __init__(
        self,
        *,
        type: global___SqlDataFetch.TaskType.ValueType = ...,
        sql_query: global___SqlDataFetch.SqlQuery | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sql_query", b"sql_query", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sql_query", b"sql_query", "task", b"task", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["task", b"task"]) -> typing_extensions.Literal["sql_query"] | None: ...

global___SqlDataFetch = SqlDataFetch
