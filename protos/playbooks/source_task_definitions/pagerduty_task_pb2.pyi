"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Pagerduty(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TaskType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Pagerduty._TaskType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Pagerduty._TaskType.ValueType  # 0
        SEND_NOTE: Pagerduty._TaskType.ValueType  # 1

    class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper): ...
    UNKNOWN: Pagerduty.TaskType.ValueType  # 0
    SEND_NOTE: Pagerduty.TaskType.ValueType  # 1

    @typing_extensions.final
    class SendNote(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SERVICE_FIELD_NUMBER: builtins.int
        INCIDENT_FIELD_NUMBER: builtins.int
        NOTE_FIELD_NUMBER: builtins.int
        @property
        def service(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def incident(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def note(self) -> google.protobuf.struct_pb2.Struct: ...
        def __init__(
            self,
            *,
            service: google.protobuf.wrappers_pb2.StringValue | None = ...,
            incident: google.protobuf.wrappers_pb2.StringValue | None = ...,
            note: google.protobuf.struct_pb2.Struct | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["incident", b"incident", "note", b"note", "service", b"service"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["incident", b"incident", "note", b"note", "service", b"service"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    SEND_NOTE_FIELD_NUMBER: builtins.int
    type: global___Pagerduty.TaskType.ValueType
    @property
    def send_note(self) -> global___Pagerduty.SendNote: ...
    def __init__(
        self,
        *,
        type: global___Pagerduty.TaskType.ValueType = ...,
        send_note: global___Pagerduty.SendNote | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["send_note", b"send_note", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["send_note", b"send_note", "task", b"task", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["task", b"task"]) -> typing_extensions.Literal["send_note"] | None: ...

global___Pagerduty = Pagerduty
