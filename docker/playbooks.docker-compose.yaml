version: '3.9'

services:
  db:
    image: postgres:11
    environment:
      - "POSTGRES_DB=db"
      - "POSTGRES_USER=user"
      - "POSTGRES_PASSWORD=pass"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    networks:
      - mynetwork

  setup_db:
    build:
      context: ..
      dockerfile: Dockerfile
    image: playbooks
    command: ./setup_db.sh
    environment:
      - "DJANGO_DEBUG=True"
      - "CELERY_BROKER_URL=redis://redis:6379/0"
      - "CELERY_RESULT_BACKEND=redis://redis:6379/0"
      - "REDIS_URL=redis://redis:6379/0"
      - "POSTGRES_DB=db"
      - "POSTGRES_USER=user"
      - "POSTGRES_PASSWORD=pass"
      - "POSTGRES_HOST=db"
      - "POSTGRES_PORT=5432"
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

  server:
    build:
      context: ..
      dockerfile: Dockerfile
    image: playbooks
    command: ./start-server.sh
    ports:
      - 8080:8080
    environment:
      - "DJANGO_DEBUG=True"
      - "POSTGRES_HOST=db"
      - "CELERY_BROKER_URL=redis://redis:6379/0"
      - "CELERY_RESULT_BACKEND=redis://redis:6379/0"
      - "REDIS_URL=redis://redis:6379/0"
      - "POSTGRES_USER=user"
      - "POSTGRES_PASSWORD=pass"
    depends_on:
      - db
      - redis
      - setup_db
    networks:
      - mynetwork

  web:
    build:
      context: ../web
      dockerfile: Dockerfile
    image: web
    ports:
      - '80:80'
    depends_on:
      - server
    networks:
      - mynetwork

  celery_worker:
    build:
      context: ..
      dockerfile: Dockerfile
    image: playbooks
    command: ./start-celery-worker.sh
    environment:
      - "DJANGO_DEBUG=True"
      - "POSTGRES_HOST=db"
      - "CELERY_BROKER_URL=redis://redis:6379/0"
      - "CELERY_RESULT_BACKEND=redis://redis:6379/0"
      - "REDIS_URL=redis://redis:6379/0"
      - "POSTGRES_USER=user"
      - "POSTGRES_PASSWORD=pass"
    depends_on:
      - db
      - redis
      - setup_db
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  postgres_data: