apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-setup_db'
  labels:
    katenary.io/component: setup_db
    katenary.io/project: '{{ .Chart.Name }}'
    katenary.io/release: '{{ .Release.Name }}'
  annotations:
    katenary.io/docker-compose-sha1: da39a3ee5e6b4b0d3255bfef95601890afd80709
    katenary.io/version: 2.0.0-beta2
spec:
  replicas: 1
  selector:
    matchLabels:
      katenary.io/component: setup_db
      katenary.io/release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        katenary.io/component: setup_db
        katenary.io/release: '{{ .Release.Name }}'
    spec:
      initContainers:
        - name: check-db
          image: busybox
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking db port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ .Release.Name }}-db 5432 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
        - name: check-redis
          image: busybox
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking redis port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ .Release.Name }}-redis 6379 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
      containers:
        - name: setup_db
          image: '{{ .Values.setup_db.repository.image }}{{ if ne .Values.setup_db.repository.tag "" }}:{{ .Values.setup_db.repository.tag }}{{ end }}'
          ports:
            - name: setup_db
              containerPort: 8081
          env:
            - name: POSTGRES_PASSWORD
              value: '{{ tpl .Values.setup_db.environment.POSTGRES_PASSWORD . }}'
            - name: POSTGRES_DB
              value: '{{ tpl .Values.setup_db.environment.POSTGRES_DB . }}'
            - name: POSTGRES_PORT
              value: '{{ tpl .Values.setup_db.environment.POSTGRES_PORT . }}'
            - name: POSTGRES_HOST
              value: '{{ tpl .Values.setup_db.environment.POSTGRES_HOST . }}'
            - name: REDIS_URL
              value: '{{ tpl .Values.setup_db.environment.REDIS_URL . }}'
            - name: CELERY_RESULT_BACKEND
              value: '{{ tpl .Values.setup_db.environment.CELERY_RESULT_BACKEND . }}'
            - name: CELERY_BROKER_URL
              value: '{{ tpl .Values.setup_db.environment.CELERY_BROKER_URL . }}'
            - name: POSTGRES_USER
              value: '{{ tpl .Values.setup_db.environment.POSTGRES_USER . }}'
            - name: DJANGO_DEBUG
              value: '{{ tpl .Values.setup_db.environment.DJANGO_DEBUG . }}'
          command:
            - ./setup_db.sh

